// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kydroid_bridge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "kydroid_bridge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace kydroid {
namespace protobuf {
namespace bridge {

void protobuf_ShutdownFile_kydroid_5fbridge_2eproto() {
  delete StructuredError::default_instance_;
  delete Intent::default_instance_;
  delete Rect::default_instance_;
  delete Notification::default_instance_;
  delete LaunchApplication::default_instance_;
  delete SetFocusedTask::default_instance_;
  delete RemoveTask::default_instance_;
  delete ResizeTask::default_instance_;
  delete WakeupTask::default_instance_;
  delete SetPropTask::default_instance_;
  delete ClipboardData::default_instance_;
  delete BootFinishedEvent::default_instance_;
  delete WindowStateUpdateEvent::default_instance_;
  delete WindowStateUpdateEvent_WindowState::default_instance_;
  delete ApplicationListUpdateEvent::default_instance_;
  delete ApplicationListUpdateEvent_Application::default_instance_;
  delete EventSequence::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_kydroid_5fbridge_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_kydroid_5fbridge_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  StructuredError::default_instance_ = new StructuredError();
  Intent::default_instance_ = new Intent();
  Rect::default_instance_ = new Rect();
  Notification::default_instance_ = new Notification();
  LaunchApplication::default_instance_ = new LaunchApplication();
  SetFocusedTask::default_instance_ = new SetFocusedTask();
  RemoveTask::default_instance_ = new RemoveTask();
  ResizeTask::default_instance_ = new ResizeTask();
  WakeupTask::default_instance_ = new WakeupTask();
  SetPropTask::default_instance_ = new SetPropTask();
  ClipboardData::default_instance_ = new ClipboardData();
  BootFinishedEvent::default_instance_ = new BootFinishedEvent();
  WindowStateUpdateEvent::default_instance_ = new WindowStateUpdateEvent();
  WindowStateUpdateEvent_WindowState::default_instance_ = new WindowStateUpdateEvent_WindowState();
  ApplicationListUpdateEvent::default_instance_ = new ApplicationListUpdateEvent();
  ApplicationListUpdateEvent_Application::default_instance_ = new ApplicationListUpdateEvent_Application();
  EventSequence::default_instance_ = new EventSequence();
  StructuredError::default_instance_->InitAsDefaultInstance();
  Intent::default_instance_->InitAsDefaultInstance();
  Rect::default_instance_->InitAsDefaultInstance();
  Notification::default_instance_->InitAsDefaultInstance();
  LaunchApplication::default_instance_->InitAsDefaultInstance();
  SetFocusedTask::default_instance_->InitAsDefaultInstance();
  RemoveTask::default_instance_->InitAsDefaultInstance();
  ResizeTask::default_instance_->InitAsDefaultInstance();
  WakeupTask::default_instance_->InitAsDefaultInstance();
  SetPropTask::default_instance_->InitAsDefaultInstance();
  ClipboardData::default_instance_->InitAsDefaultInstance();
  BootFinishedEvent::default_instance_->InitAsDefaultInstance();
  WindowStateUpdateEvent::default_instance_->InitAsDefaultInstance();
  WindowStateUpdateEvent_WindowState::default_instance_->InitAsDefaultInstance();
  ApplicationListUpdateEvent::default_instance_->InitAsDefaultInstance();
  ApplicationListUpdateEvent_Application::default_instance_->InitAsDefaultInstance();
  EventSequence::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_kydroid_5fbridge_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_kydroid_5fbridge_2eproto_once_);
void protobuf_AddDesc_kydroid_5fbridge_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_kydroid_5fbridge_2eproto_once_,
                 &protobuf_AddDesc_kydroid_5fbridge_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_kydroid_5fbridge_2eproto {
  StaticDescriptorInitializer_kydroid_5fbridge_2eproto() {
    protobuf_AddDesc_kydroid_5fbridge_2eproto();
  }
} static_descriptor_initializer_kydroid_5fbridge_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int StructuredError::kDomainFieldNumber;
const int StructuredError::kCodeFieldNumber;
#endif  // !_MSC_VER

StructuredError::StructuredError()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.StructuredError)
}

void StructuredError::InitAsDefaultInstance() {
}

StructuredError::StructuredError(const StructuredError& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.StructuredError)
}

void StructuredError::SharedCtor() {
  _cached_size_ = 0;
  domain_ = 0u;
  code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StructuredError::~StructuredError() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.StructuredError)
  SharedDtor();
}

void StructuredError::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void StructuredError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StructuredError& StructuredError::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

StructuredError* StructuredError::default_instance_ = NULL;

StructuredError* StructuredError::New() const {
  return new StructuredError;
}

void StructuredError::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<StructuredError*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(domain_, code_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool StructuredError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.StructuredError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 domain = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_)));
          set_has_domain();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_code;
        break;
      }

      // optional uint32 code = 2;
      case 2: {
        if (tag == 16) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.StructuredError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.StructuredError)
  return false;
#undef DO_
}

void StructuredError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.StructuredError)
  // optional uint32 domain = 1;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->domain(), output);
  }

  // optional uint32 code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->code(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.StructuredError)
}

int StructuredError::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 domain = 1;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->domain());
    }

    // optional uint32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->code());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructuredError::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StructuredError*>(&from));
}

void StructuredError::MergeFrom(const StructuredError& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void StructuredError::CopyFrom(const StructuredError& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructuredError::IsInitialized() const {

  return true;
}

void StructuredError::Swap(StructuredError* other) {
  if (other != this) {
    std::swap(domain_, other->domain_);
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string StructuredError::GetTypeName() const {
  return "kydroid.protobuf.bridge.StructuredError";
}


// ===================================================================

#ifndef _MSC_VER
const int Intent::kActionFieldNumber;
const int Intent::kUriFieldNumber;
const int Intent::kTypeFieldNumber;
const int Intent::kPackageFieldNumber;
const int Intent::kComponentFieldNumber;
const int Intent::kCategoriesFieldNumber;
#endif  // !_MSC_VER

Intent::Intent()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.Intent)
}

void Intent::InitAsDefaultInstance() {
}

Intent::Intent(const Intent& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.Intent)
}

void Intent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  action_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Intent::~Intent() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.Intent)
  SharedDtor();
}

void Intent::SharedDtor() {
  if (action_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete action_;
  }
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete package_;
  }
  if (component_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete component_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Intent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Intent& Intent::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

Intent* Intent::default_instance_ = NULL;

Intent* Intent::New() const {
  return new Intent;
}

void Intent::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_action()) {
      if (action_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        action_->clear();
      }
    }
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_package()) {
      if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        package_->clear();
      }
    }
    if (has_component()) {
      if (component_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        component_->clear();
      }
    }
  }
  categories_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Intent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.Intent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string action = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_uri;
        break;
      }

      // optional string uri = 2;
      case 2: {
        if (tag == 18) {
         parse_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_package;
        break;
      }

      // optional string package = 4;
      case 4: {
        if (tag == 34) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_component;
        break;
      }

      // optional string component = 5;
      case 5: {
        if (tag == 42) {
         parse_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_categories;
        break;
      }

      // repeated string categories = 6;
      case 6: {
        if (tag == 50) {
         parse_categories:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_categories()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_categories;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.Intent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.Intent)
  return false;
#undef DO_
}

void Intent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.Intent)
  // optional string action = 1;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  // optional string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // optional string type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // optional string package = 4;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->package(), output);
  }

  // optional string component = 5;
  if (has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->component(), output);
  }

  // repeated string categories = 6;
  for (int i = 0; i < this->categories_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->categories(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.Intent)
}

int Intent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->action());
    }

    // optional string uri = 2;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
    }

    // optional string type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string package = 4;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional string component = 5;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->component());
    }

  }
  // repeated string categories = 6;
  total_size += 1 * this->categories_size();
  for (int i = 0; i < this->categories_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->categories(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Intent*>(&from));
}

void Intent::MergeFrom(const Intent& from) {
  GOOGLE_CHECK_NE(&from, this);
  categories_.MergeFrom(from.categories_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_action()) {
      set_action(from.action());
    }
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_package()) {
      set_package(from.package());
    }
    if (from.has_component()) {
      set_component(from.component());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Intent::CopyFrom(const Intent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intent::IsInitialized() const {

  return true;
}

void Intent::Swap(Intent* other) {
  if (other != this) {
    std::swap(action_, other->action_);
    std::swap(uri_, other->uri_);
    std::swap(type_, other->type_);
    std::swap(package_, other->package_);
    std::swap(component_, other->component_);
    categories_.Swap(&other->categories_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Intent::GetTypeName() const {
  return "kydroid.protobuf.bridge.Intent";
}


// ===================================================================

#ifndef _MSC_VER
const int Rect::kLeftFieldNumber;
const int Rect::kTopFieldNumber;
const int Rect::kRightFieldNumber;
const int Rect::kBottomFieldNumber;
#endif  // !_MSC_VER

Rect::Rect()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.Rect)
}

void Rect::InitAsDefaultInstance() {
}

Rect::Rect(const Rect& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.Rect)
}

void Rect::SharedCtor() {
  _cached_size_ = 0;
  left_ = 0;
  top_ = 0;
  right_ = 0;
  bottom_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Rect::~Rect() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.Rect)
  SharedDtor();
}

void Rect::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Rect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Rect& Rect::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

Rect* Rect::default_instance_ = NULL;

Rect* Rect::New() const {
  return new Rect;
}

void Rect::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Rect*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(left_, bottom_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Rect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.Rect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
          set_has_left();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_top;
        break;
      }

      // optional int32 top = 2;
      case 2: {
        if (tag == 16) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
          set_has_top();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_right;
        break;
      }

      // optional int32 right = 3;
      case 3: {
        if (tag == 24) {
         parse_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
          set_has_right();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bottom;
        break;
      }

      // optional int32 bottom = 4;
      case 4: {
        if (tag == 32) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.Rect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.Rect)
  return false;
#undef DO_
}

void Rect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.Rect)
  // optional int32 left = 1;
  if (has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left(), output);
  }

  // optional int32 top = 2;
  if (has_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->top(), output);
  }

  // optional int32 right = 3;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->right(), output);
  }

  // optional int32 bottom = 4;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bottom(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.Rect)
}

int Rect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left());
    }

    // optional int32 top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top());
    }

    // optional int32 right = 3;
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right());
    }

    // optional int32 bottom = 4;
    if (has_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottom());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rect::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Rect*>(&from));
}

void Rect::MergeFrom(const Rect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left()) {
      set_left(from.left());
    }
    if (from.has_top()) {
      set_top(from.top());
    }
    if (from.has_right()) {
      set_right(from.right());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Rect::CopyFrom(const Rect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rect::IsInitialized() const {

  return true;
}

void Rect::Swap(Rect* other) {
  if (other != this) {
    std::swap(left_, other->left_);
    std::swap(top_, other->top_);
    std::swap(right_, other->right_);
    std::swap(bottom_, other->bottom_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Rect::GetTypeName() const {
  return "kydroid.protobuf.bridge.Rect";
}


// ===================================================================

#ifndef _MSC_VER
const int Notification::kPackageNameFieldNumber;
const int Notification::kCategoryFieldNumber;
const int Notification::kTitleFieldNumber;
const int Notification::kTickerTextFieldNumber;
const int Notification::kTextFieldNumber;
#endif  // !_MSC_VER

Notification::Notification()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.Notification)
}

void Notification::InitAsDefaultInstance() {
}

Notification::Notification(const Notification& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.Notification)
}

void Notification::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticker_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  if (package_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete package_name_;
  }
  if (category_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete category_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (ticker_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ticker_text_;
  }
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Notification& Notification::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

Notification* Notification::default_instance_ = NULL;

Notification* Notification::New() const {
  return new Notification;
}

void Notification::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_package_name()) {
      if (package_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        package_name_->clear();
      }
    }
    if (has_category()) {
      if (category_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        category_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_ticker_text()) {
      if (ticker_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ticker_text_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string package_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_category;
        break;
      }

      // required string category = 2;
      case 2: {
        if (tag == 18) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // required string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ticker_text;
        break;
      }

      // optional string ticker_text = 4;
      case 4: {
        if (tag == 34) {
         parse_ticker_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticker_text()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_text;
        break;
      }

      // optional string text = 5;
      case 5: {
        if (tag == 42) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.Notification)
  // required string package_name = 1;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // required string category = 2;
  if (has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->category(), output);
  }

  // required string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string ticker_text = 4;
  if (has_ticker_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ticker_text(), output);
  }

  // optional string text = 5;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.Notification)
}

int Notification::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string package_name = 1;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // required string category = 2;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // required string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string ticker_text = 4;
    if (has_ticker_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ticker_text());
    }

    // optional string text = 5;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notification::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Notification*>(&from));
}

void Notification::MergeFrom(const Notification& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_name()) {
      set_package_name(from.package_name());
    }
    if (from.has_category()) {
      set_category(from.category());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_ticker_text()) {
      set_ticker_text(from.ticker_text());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Notification::CopyFrom(const Notification& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Notification::Swap(Notification* other) {
  if (other != this) {
    std::swap(package_name_, other->package_name_);
    std::swap(category_, other->category_);
    std::swap(title_, other->title_);
    std::swap(ticker_text_, other->ticker_text_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Notification::GetTypeName() const {
  return "kydroid.protobuf.bridge.Notification";
}


// ===================================================================

bool LaunchApplication_Stack_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LaunchApplication_Stack LaunchApplication::DEFAULT;
const LaunchApplication_Stack LaunchApplication::FULLSCREEN;
const LaunchApplication_Stack LaunchApplication::FREEFORM;
const LaunchApplication_Stack LaunchApplication::Stack_MIN;
const LaunchApplication_Stack LaunchApplication::Stack_MAX;
const int LaunchApplication::Stack_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int LaunchApplication::kIntentFieldNumber;
const int LaunchApplication::kLaunchBoundsFieldNumber;
const int LaunchApplication::kStackFieldNumber;
#endif  // !_MSC_VER

LaunchApplication::LaunchApplication()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.LaunchApplication)
}

void LaunchApplication::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  intent_ = const_cast< ::kydroid::protobuf::bridge::Intent*>(
      ::kydroid::protobuf::bridge::Intent::internal_default_instance());
#else
  intent_ = const_cast< ::kydroid::protobuf::bridge::Intent*>(&::kydroid::protobuf::bridge::Intent::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  launch_bounds_ = const_cast< ::kydroid::protobuf::bridge::Rect*>(
      ::kydroid::protobuf::bridge::Rect::internal_default_instance());
#else
  launch_bounds_ = const_cast< ::kydroid::protobuf::bridge::Rect*>(&::kydroid::protobuf::bridge::Rect::default_instance());
#endif
}

LaunchApplication::LaunchApplication(const LaunchApplication& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.LaunchApplication)
}

void LaunchApplication::SharedCtor() {
  _cached_size_ = 0;
  intent_ = NULL;
  launch_bounds_ = NULL;
  stack_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LaunchApplication::~LaunchApplication() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.LaunchApplication)
  SharedDtor();
}

void LaunchApplication::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete intent_;
    delete launch_bounds_;
  }
}

void LaunchApplication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LaunchApplication& LaunchApplication::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

LaunchApplication* LaunchApplication::default_instance_ = NULL;

LaunchApplication* LaunchApplication::New() const {
  return new LaunchApplication;
}

void LaunchApplication::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_intent()) {
      if (intent_ != NULL) intent_->::kydroid::protobuf::bridge::Intent::Clear();
    }
    if (has_launch_bounds()) {
      if (launch_bounds_ != NULL) launch_bounds_->::kydroid::protobuf::bridge::Rect::Clear();
    }
    stack_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool LaunchApplication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.LaunchApplication)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kydroid.protobuf.bridge.Intent intent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_launch_bounds;
        break;
      }

      // optional .kydroid.protobuf.bridge.Rect launch_bounds = 2;
      case 2: {
        if (tag == 18) {
         parse_launch_bounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_launch_bounds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stack;
        break;
      }

      // optional .kydroid.protobuf.bridge.LaunchApplication.Stack stack = 3 [default = DEFAULT];
      case 3: {
        if (tag == 24) {
         parse_stack:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::kydroid::protobuf::bridge::LaunchApplication_Stack_IsValid(value)) {
            set_stack(static_cast< ::kydroid::protobuf::bridge::LaunchApplication_Stack >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.LaunchApplication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.LaunchApplication)
  return false;
#undef DO_
}

void LaunchApplication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.LaunchApplication)
  // required .kydroid.protobuf.bridge.Intent intent = 1;
  if (has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->intent(), output);
  }

  // optional .kydroid.protobuf.bridge.Rect launch_bounds = 2;
  if (has_launch_bounds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->launch_bounds(), output);
  }

  // optional .kydroid.protobuf.bridge.LaunchApplication.Stack stack = 3 [default = DEFAULT];
  if (has_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->stack(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.LaunchApplication)
}

int LaunchApplication::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .kydroid.protobuf.bridge.Intent intent = 1;
    if (has_intent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intent());
    }

    // optional .kydroid.protobuf.bridge.Rect launch_bounds = 2;
    if (has_launch_bounds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->launch_bounds());
    }

    // optional .kydroid.protobuf.bridge.LaunchApplication.Stack stack = 3 [default = DEFAULT];
    if (has_stack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stack());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaunchApplication::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LaunchApplication*>(&from));
}

void LaunchApplication::MergeFrom(const LaunchApplication& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intent()) {
      mutable_intent()->::kydroid::protobuf::bridge::Intent::MergeFrom(from.intent());
    }
    if (from.has_launch_bounds()) {
      mutable_launch_bounds()->::kydroid::protobuf::bridge::Rect::MergeFrom(from.launch_bounds());
    }
    if (from.has_stack()) {
      set_stack(from.stack());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void LaunchApplication::CopyFrom(const LaunchApplication& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchApplication::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LaunchApplication::Swap(LaunchApplication* other) {
  if (other != this) {
    std::swap(intent_, other->intent_);
    std::swap(launch_bounds_, other->launch_bounds_);
    std::swap(stack_, other->stack_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string LaunchApplication::GetTypeName() const {
  return "kydroid.protobuf.bridge.LaunchApplication";
}


// ===================================================================

#ifndef _MSC_VER
const int SetFocusedTask::kIdFieldNumber;
#endif  // !_MSC_VER

SetFocusedTask::SetFocusedTask()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.SetFocusedTask)
}

void SetFocusedTask::InitAsDefaultInstance() {
}

SetFocusedTask::SetFocusedTask(const SetFocusedTask& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.SetFocusedTask)
}

void SetFocusedTask::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFocusedTask::~SetFocusedTask() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.SetFocusedTask)
  SharedDtor();
}

void SetFocusedTask::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SetFocusedTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetFocusedTask& SetFocusedTask::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

SetFocusedTask* SetFocusedTask::default_instance_ = NULL;

SetFocusedTask* SetFocusedTask::New() const {
  return new SetFocusedTask;
}

void SetFocusedTask::Clear() {
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool SetFocusedTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.SetFocusedTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.SetFocusedTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.SetFocusedTask)
  return false;
#undef DO_
}

void SetFocusedTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.SetFocusedTask)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.SetFocusedTask)
}

int SetFocusedTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFocusedTask::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetFocusedTask*>(&from));
}

void SetFocusedTask::MergeFrom(const SetFocusedTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SetFocusedTask::CopyFrom(const SetFocusedTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFocusedTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetFocusedTask::Swap(SetFocusedTask* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string SetFocusedTask::GetTypeName() const {
  return "kydroid.protobuf.bridge.SetFocusedTask";
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveTask::kIdFieldNumber;
#endif  // !_MSC_VER

RemoveTask::RemoveTask()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.RemoveTask)
}

void RemoveTask::InitAsDefaultInstance() {
}

RemoveTask::RemoveTask(const RemoveTask& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.RemoveTask)
}

void RemoveTask::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveTask::~RemoveTask() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.RemoveTask)
  SharedDtor();
}

void RemoveTask::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void RemoveTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RemoveTask& RemoveTask::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

RemoveTask* RemoveTask::default_instance_ = NULL;

RemoveTask* RemoveTask::New() const {
  return new RemoveTask;
}

void RemoveTask::Clear() {
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool RemoveTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.RemoveTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.RemoveTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.RemoveTask)
  return false;
#undef DO_
}

void RemoveTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.RemoveTask)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.RemoveTask)
}

int RemoveTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveTask::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RemoveTask*>(&from));
}

void RemoveTask::MergeFrom(const RemoveTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void RemoveTask::CopyFrom(const RemoveTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveTask::Swap(RemoveTask* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string RemoveTask::GetTypeName() const {
  return "kydroid.protobuf.bridge.RemoveTask";
}


// ===================================================================

#ifndef _MSC_VER
const int ResizeTask::kIdFieldNumber;
const int ResizeTask::kResizeModeFieldNumber;
const int ResizeTask::kRectFieldNumber;
#endif  // !_MSC_VER

ResizeTask::ResizeTask()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.ResizeTask)
}

void ResizeTask::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  rect_ = const_cast< ::kydroid::protobuf::bridge::Rect*>(
      ::kydroid::protobuf::bridge::Rect::internal_default_instance());
#else
  rect_ = const_cast< ::kydroid::protobuf::bridge::Rect*>(&::kydroid::protobuf::bridge::Rect::default_instance());
#endif
}

ResizeTask::ResizeTask(const ResizeTask& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.ResizeTask)
}

void ResizeTask::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  resize_mode_ = 0;
  rect_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResizeTask::~ResizeTask() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.ResizeTask)
  SharedDtor();
}

void ResizeTask::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete rect_;
  }
}

void ResizeTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ResizeTask& ResizeTask::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

ResizeTask* ResizeTask::default_instance_ = NULL;

ResizeTask* ResizeTask::New() const {
  return new ResizeTask;
}

void ResizeTask::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ResizeTask*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, resize_mode_);
    if (has_rect()) {
      if (rect_ != NULL) rect_->::kydroid::protobuf::bridge::Rect::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ResizeTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.ResizeTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_resize_mode;
        break;
      }

      // required int32 resize_mode = 2;
      case 2: {
        if (tag == 16) {
         parse_resize_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resize_mode_)));
          set_has_resize_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rect;
        break;
      }

      // required .kydroid.protobuf.bridge.Rect rect = 3;
      case 3: {
        if (tag == 26) {
         parse_rect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.ResizeTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.ResizeTask)
  return false;
#undef DO_
}

void ResizeTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.ResizeTask)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 resize_mode = 2;
  if (has_resize_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resize_mode(), output);
  }

  // required .kydroid.protobuf.bridge.Rect rect = 3;
  if (has_rect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->rect(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.ResizeTask)
}

int ResizeTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required int32 resize_mode = 2;
    if (has_resize_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resize_mode());
    }

    // required .kydroid.protobuf.bridge.Rect rect = 3;
    if (has_rect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rect());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResizeTask::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ResizeTask*>(&from));
}

void ResizeTask::MergeFrom(const ResizeTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_resize_mode()) {
      set_resize_mode(from.resize_mode());
    }
    if (from.has_rect()) {
      mutable_rect()->::kydroid::protobuf::bridge::Rect::MergeFrom(from.rect());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ResizeTask::CopyFrom(const ResizeTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResizeTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResizeTask::Swap(ResizeTask* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(resize_mode_, other->resize_mode_);
    std::swap(rect_, other->rect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ResizeTask::GetTypeName() const {
  return "kydroid.protobuf.bridge.ResizeTask";
}


// ===================================================================

#ifndef _MSC_VER
const int WakeupTask::kIdFieldNumber;
#endif  // !_MSC_VER

WakeupTask::WakeupTask()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.WakeupTask)
}

void WakeupTask::InitAsDefaultInstance() {
}

WakeupTask::WakeupTask(const WakeupTask& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.WakeupTask)
}

void WakeupTask::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WakeupTask::~WakeupTask() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.WakeupTask)
  SharedDtor();
}

void WakeupTask::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void WakeupTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WakeupTask& WakeupTask::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

WakeupTask* WakeupTask::default_instance_ = NULL;

WakeupTask* WakeupTask::New() const {
  return new WakeupTask;
}

void WakeupTask::Clear() {
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool WakeupTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.WakeupTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.WakeupTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.WakeupTask)
  return false;
#undef DO_
}

void WakeupTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.WakeupTask)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.WakeupTask)
}

int WakeupTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WakeupTask::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WakeupTask*>(&from));
}

void WakeupTask::MergeFrom(const WakeupTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void WakeupTask::CopyFrom(const WakeupTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WakeupTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void WakeupTask::Swap(WakeupTask* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string WakeupTask::GetTypeName() const {
  return "kydroid.protobuf.bridge.WakeupTask";
}


// ===================================================================

#ifndef _MSC_VER
const int SetPropTask::kPropKeyFieldNumber;
const int SetPropTask::kPropValueFieldNumber;
#endif  // !_MSC_VER

SetPropTask::SetPropTask()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.SetPropTask)
}

void SetPropTask::InitAsDefaultInstance() {
}

SetPropTask::SetPropTask(const SetPropTask& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.SetPropTask)
}

void SetPropTask::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  prop_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prop_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetPropTask::~SetPropTask() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.SetPropTask)
  SharedDtor();
}

void SetPropTask::SharedDtor() {
  if (prop_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prop_key_;
  }
  if (prop_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prop_value_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SetPropTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SetPropTask& SetPropTask::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

SetPropTask* SetPropTask::default_instance_ = NULL;

SetPropTask* SetPropTask::New() const {
  return new SetPropTask;
}

void SetPropTask::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_prop_key()) {
      if (prop_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        prop_key_->clear();
      }
    }
    if (has_prop_value()) {
      if (prop_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        prop_value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool SetPropTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.SetPropTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string prop_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prop_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prop_value;
        break;
      }

      // required string prop_value = 2;
      case 2: {
        if (tag == 18) {
         parse_prop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prop_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.SetPropTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.SetPropTask)
  return false;
#undef DO_
}

void SetPropTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.SetPropTask)
  // required string prop_key = 1;
  if (has_prop_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->prop_key(), output);
  }

  // required string prop_value = 2;
  if (has_prop_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prop_value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.SetPropTask)
}

int SetPropTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string prop_key = 1;
    if (has_prop_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prop_key());
    }

    // required string prop_value = 2;
    if (has_prop_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prop_value());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPropTask::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SetPropTask*>(&from));
}

void SetPropTask::MergeFrom(const SetPropTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prop_key()) {
      set_prop_key(from.prop_key());
    }
    if (from.has_prop_value()) {
      set_prop_value(from.prop_value());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SetPropTask::CopyFrom(const SetPropTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPropTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetPropTask::Swap(SetPropTask* other) {
  if (other != this) {
    std::swap(prop_key_, other->prop_key_);
    std::swap(prop_value_, other->prop_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string SetPropTask::GetTypeName() const {
  return "kydroid.protobuf.bridge.SetPropTask";
}


// ===================================================================

#ifndef _MSC_VER
const int ClipboardData::kTextFieldNumber;
const int ClipboardData::kErrorFieldNumber;
const int ClipboardData::kStructuredErrorFieldNumber;
#endif  // !_MSC_VER

ClipboardData::ClipboardData()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.ClipboardData)
}

void ClipboardData::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  structured_error_ = const_cast< ::kydroid::protobuf::bridge::StructuredError*>(
      ::kydroid::protobuf::bridge::StructuredError::internal_default_instance());
#else
  structured_error_ = const_cast< ::kydroid::protobuf::bridge::StructuredError*>(&::kydroid::protobuf::bridge::StructuredError::default_instance());
#endif
}

ClipboardData::ClipboardData(const ClipboardData& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.ClipboardData)
}

void ClipboardData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  structured_error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClipboardData::~ClipboardData() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.ClipboardData)
  SharedDtor();
}

void ClipboardData::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete structured_error_;
  }
}

void ClipboardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ClipboardData& ClipboardData::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

ClipboardData* ClipboardData::default_instance_ = NULL;

ClipboardData* ClipboardData::New() const {
  return new ClipboardData;
}

void ClipboardData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
    if (has_structured_error()) {
      if (structured_error_ != NULL) structured_error_->::kydroid::protobuf::bridge::StructuredError::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ClipboardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.ClipboardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1018)) goto parse_error;
        break;
      }

      // optional string error = 127;
      case 127: {
        if (tag == 1018) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1026)) goto parse_structured_error;
        break;
      }

      // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
      case 128: {
        if (tag == 1026) {
         parse_structured_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_structured_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.ClipboardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.ClipboardData)
  return false;
#undef DO_
}

void ClipboardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.ClipboardData)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional string error = 127;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      127, this->error(), output);
  }

  // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
  if (has_structured_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      128, this->structured_error(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.ClipboardData)
}

int ClipboardData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string error = 127;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
    if (has_structured_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_error());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClipboardData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClipboardData*>(&from));
}

void ClipboardData::MergeFrom(const ClipboardData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_structured_error()) {
      mutable_structured_error()->::kydroid::protobuf::bridge::StructuredError::MergeFrom(from.structured_error());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ClipboardData::CopyFrom(const ClipboardData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClipboardData::IsInitialized() const {

  return true;
}

void ClipboardData::Swap(ClipboardData* other) {
  if (other != this) {
    std::swap(text_, other->text_);
    std::swap(error_, other->error_);
    std::swap(structured_error_, other->structured_error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ClipboardData::GetTypeName() const {
  return "kydroid.protobuf.bridge.ClipboardData";
}


// ===================================================================

#ifndef _MSC_VER
const int BootFinishedEvent::kFirstBootDoneFieldNumber;
#endif  // !_MSC_VER

BootFinishedEvent::BootFinishedEvent()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.BootFinishedEvent)
}

void BootFinishedEvent::InitAsDefaultInstance() {
}

BootFinishedEvent::BootFinishedEvent(const BootFinishedEvent& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.BootFinishedEvent)
}

void BootFinishedEvent::SharedCtor() {
  _cached_size_ = 0;
  first_boot_done_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BootFinishedEvent::~BootFinishedEvent() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.BootFinishedEvent)
  SharedDtor();
}

void BootFinishedEvent::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void BootFinishedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BootFinishedEvent& BootFinishedEvent::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

BootFinishedEvent* BootFinishedEvent::default_instance_ = NULL;

BootFinishedEvent* BootFinishedEvent::New() const {
  return new BootFinishedEvent;
}

void BootFinishedEvent::Clear() {
  first_boot_done_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool BootFinishedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.BootFinishedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool first_boot_done = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_boot_done_)));
          set_has_first_boot_done();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.BootFinishedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.BootFinishedEvent)
  return false;
#undef DO_
}

void BootFinishedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.BootFinishedEvent)
  // optional bool first_boot_done = 1;
  if (has_first_boot_done()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->first_boot_done(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.BootFinishedEvent)
}

int BootFinishedEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool first_boot_done = 1;
    if (has_first_boot_done()) {
      total_size += 1 + 1;
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BootFinishedEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BootFinishedEvent*>(&from));
}

void BootFinishedEvent::MergeFrom(const BootFinishedEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_boot_done()) {
      set_first_boot_done(from.first_boot_done());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void BootFinishedEvent::CopyFrom(const BootFinishedEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BootFinishedEvent::IsInitialized() const {

  return true;
}

void BootFinishedEvent::Swap(BootFinishedEvent* other) {
  if (other != this) {
    std::swap(first_boot_done_, other->first_boot_done_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BootFinishedEvent::GetTypeName() const {
  return "kydroid.protobuf.bridge.BootFinishedEvent";
}


// ===================================================================

#ifndef _MSC_VER
const int WindowStateUpdateEvent_WindowState::kDisplayIdFieldNumber;
const int WindowStateUpdateEvent_WindowState::kHasSurfaceFieldNumber;
const int WindowStateUpdateEvent_WindowState::kPackageNameFieldNumber;
const int WindowStateUpdateEvent_WindowState::kFrameLeftFieldNumber;
const int WindowStateUpdateEvent_WindowState::kFrameTopFieldNumber;
const int WindowStateUpdateEvent_WindowState::kFrameRightFieldNumber;
const int WindowStateUpdateEvent_WindowState::kFrameBottomFieldNumber;
const int WindowStateUpdateEvent_WindowState::kTaskIdFieldNumber;
const int WindowStateUpdateEvent_WindowState::kStackIdFieldNumber;
#endif  // !_MSC_VER

WindowStateUpdateEvent_WindowState::WindowStateUpdateEvent_WindowState()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
}

void WindowStateUpdateEvent_WindowState::InitAsDefaultInstance() {
}

WindowStateUpdateEvent_WindowState::WindowStateUpdateEvent_WindowState(const WindowStateUpdateEvent_WindowState& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
}

void WindowStateUpdateEvent_WindowState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  display_id_ = 0;
  has_surface_ = false;
  package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_left_ = 0;
  frame_top_ = 0;
  frame_right_ = 0;
  frame_bottom_ = 0;
  task_id_ = 0;
  stack_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WindowStateUpdateEvent_WindowState::~WindowStateUpdateEvent_WindowState() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
  SharedDtor();
}

void WindowStateUpdateEvent_WindowState::SharedDtor() {
  if (package_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete package_name_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void WindowStateUpdateEvent_WindowState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WindowStateUpdateEvent_WindowState& WindowStateUpdateEvent_WindowState::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

WindowStateUpdateEvent_WindowState* WindowStateUpdateEvent_WindowState::default_instance_ = NULL;

WindowStateUpdateEvent_WindowState* WindowStateUpdateEvent_WindowState::New() const {
  return new WindowStateUpdateEvent_WindowState;
}

void WindowStateUpdateEvent_WindowState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WindowStateUpdateEvent_WindowState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(display_id_, has_surface_);
    ZR_(frame_left_, task_id_);
    if (has_package_name()) {
      if (package_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        package_name_->clear();
      }
    }
  }
  stack_id_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool WindowStateUpdateEvent_WindowState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 display_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
          set_has_display_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_has_surface;
        break;
      }

      // required bool has_surface = 2;
      case 2: {
        if (tag == 16) {
         parse_has_surface:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_surface_)));
          set_has_has_surface();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_package_name;
        break;
      }

      // required string package_name = 3;
      case 3: {
        if (tag == 26) {
         parse_package_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_frame_left;
        break;
      }

      // required int32 frame_left = 4;
      case 4: {
        if (tag == 32) {
         parse_frame_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_left_)));
          set_has_frame_left();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_frame_top;
        break;
      }

      // required int32 frame_top = 5;
      case 5: {
        if (tag == 40) {
         parse_frame_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_top_)));
          set_has_frame_top();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_frame_right;
        break;
      }

      // required int32 frame_right = 6;
      case 6: {
        if (tag == 48) {
         parse_frame_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_right_)));
          set_has_frame_right();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_frame_bottom;
        break;
      }

      // required int32 frame_bottom = 7;
      case 7: {
        if (tag == 56) {
         parse_frame_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_bottom_)));
          set_has_frame_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_task_id;
        break;
      }

      // required int32 task_id = 8;
      case 8: {
        if (tag == 64) {
         parse_task_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_stack_id;
        break;
      }

      // required int32 stack_id = 9;
      case 9: {
        if (tag == 72) {
         parse_stack_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_id_)));
          set_has_stack_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
  return false;
#undef DO_
}

void WindowStateUpdateEvent_WindowState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
  // required int32 display_id = 1;
  if (has_display_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->display_id(), output);
  }

  // required bool has_surface = 2;
  if (has_has_surface()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_surface(), output);
  }

  // required string package_name = 3;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->package_name(), output);
  }

  // required int32 frame_left = 4;
  if (has_frame_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->frame_left(), output);
  }

  // required int32 frame_top = 5;
  if (has_frame_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->frame_top(), output);
  }

  // required int32 frame_right = 6;
  if (has_frame_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->frame_right(), output);
  }

  // required int32 frame_bottom = 7;
  if (has_frame_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->frame_bottom(), output);
  }

  // required int32 task_id = 8;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->task_id(), output);
  }

  // required int32 stack_id = 9;
  if (has_stack_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->stack_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState)
}

int WindowStateUpdateEvent_WindowState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 display_id = 1;
    if (has_display_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

    // required bool has_surface = 2;
    if (has_has_surface()) {
      total_size += 1 + 1;
    }

    // required string package_name = 3;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // required int32 frame_left = 4;
    if (has_frame_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frame_left());
    }

    // required int32 frame_top = 5;
    if (has_frame_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frame_top());
    }

    // required int32 frame_right = 6;
    if (has_frame_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frame_right());
    }

    // required int32 frame_bottom = 7;
    if (has_frame_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frame_bottom());
    }

    // required int32 task_id = 8;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 stack_id = 9;
    if (has_stack_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stack_id());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WindowStateUpdateEvent_WindowState::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WindowStateUpdateEvent_WindowState*>(&from));
}

void WindowStateUpdateEvent_WindowState::MergeFrom(const WindowStateUpdateEvent_WindowState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_display_id()) {
      set_display_id(from.display_id());
    }
    if (from.has_has_surface()) {
      set_has_surface(from.has_surface());
    }
    if (from.has_package_name()) {
      set_package_name(from.package_name());
    }
    if (from.has_frame_left()) {
      set_frame_left(from.frame_left());
    }
    if (from.has_frame_top()) {
      set_frame_top(from.frame_top());
    }
    if (from.has_frame_right()) {
      set_frame_right(from.frame_right());
    }
    if (from.has_frame_bottom()) {
      set_frame_bottom(from.frame_bottom());
    }
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stack_id()) {
      set_stack_id(from.stack_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void WindowStateUpdateEvent_WindowState::CopyFrom(const WindowStateUpdateEvent_WindowState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowStateUpdateEvent_WindowState::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void WindowStateUpdateEvent_WindowState::Swap(WindowStateUpdateEvent_WindowState* other) {
  if (other != this) {
    std::swap(display_id_, other->display_id_);
    std::swap(has_surface_, other->has_surface_);
    std::swap(package_name_, other->package_name_);
    std::swap(frame_left_, other->frame_left_);
    std::swap(frame_top_, other->frame_top_);
    std::swap(frame_right_, other->frame_right_);
    std::swap(frame_bottom_, other->frame_bottom_);
    std::swap(task_id_, other->task_id_);
    std::swap(stack_id_, other->stack_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string WindowStateUpdateEvent_WindowState::GetTypeName() const {
  return "kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int WindowStateUpdateEvent::kWindowsFieldNumber;
const int WindowStateUpdateEvent::kRemovedWindowsFieldNumber;
#endif  // !_MSC_VER

WindowStateUpdateEvent::WindowStateUpdateEvent()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.WindowStateUpdateEvent)
}

void WindowStateUpdateEvent::InitAsDefaultInstance() {
}

WindowStateUpdateEvent::WindowStateUpdateEvent(const WindowStateUpdateEvent& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.WindowStateUpdateEvent)
}

void WindowStateUpdateEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WindowStateUpdateEvent::~WindowStateUpdateEvent() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.WindowStateUpdateEvent)
  SharedDtor();
}

void WindowStateUpdateEvent::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void WindowStateUpdateEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WindowStateUpdateEvent& WindowStateUpdateEvent::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

WindowStateUpdateEvent* WindowStateUpdateEvent::default_instance_ = NULL;

WindowStateUpdateEvent* WindowStateUpdateEvent::New() const {
  return new WindowStateUpdateEvent;
}

void WindowStateUpdateEvent::Clear() {
  windows_.Clear();
  removed_windows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool WindowStateUpdateEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.WindowStateUpdateEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState windows = 1;
      case 1: {
        if (tag == 10) {
         parse_windows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_windows;
        if (input->ExpectTag(18)) goto parse_removed_windows;
        break;
      }

      // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState removed_windows = 2;
      case 2: {
        if (tag == 18) {
         parse_removed_windows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_removed_windows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_removed_windows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.WindowStateUpdateEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.WindowStateUpdateEvent)
  return false;
#undef DO_
}

void WindowStateUpdateEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.WindowStateUpdateEvent)
  // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState windows = 1;
  for (int i = 0; i < this->windows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->windows(i), output);
  }

  // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState removed_windows = 2;
  for (int i = 0; i < this->removed_windows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->removed_windows(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.WindowStateUpdateEvent)
}

int WindowStateUpdateEvent::ByteSize() const {
  int total_size = 0;

  // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState windows = 1;
  total_size += 1 * this->windows_size();
  for (int i = 0; i < this->windows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->windows(i));
  }

  // repeated .kydroid.protobuf.bridge.WindowStateUpdateEvent.WindowState removed_windows = 2;
  total_size += 1 * this->removed_windows_size();
  for (int i = 0; i < this->removed_windows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->removed_windows(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WindowStateUpdateEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WindowStateUpdateEvent*>(&from));
}

void WindowStateUpdateEvent::MergeFrom(const WindowStateUpdateEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  windows_.MergeFrom(from.windows_);
  removed_windows_.MergeFrom(from.removed_windows_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void WindowStateUpdateEvent::CopyFrom(const WindowStateUpdateEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowStateUpdateEvent::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->windows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->removed_windows())) return false;
  return true;
}

void WindowStateUpdateEvent::Swap(WindowStateUpdateEvent* other) {
  if (other != this) {
    windows_.Swap(&other->windows_);
    removed_windows_.Swap(&other->removed_windows_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string WindowStateUpdateEvent::GetTypeName() const {
  return "kydroid.protobuf.bridge.WindowStateUpdateEvent";
}


// ===================================================================

#ifndef _MSC_VER
const int ApplicationListUpdateEvent_Application::kNameFieldNumber;
const int ApplicationListUpdateEvent_Application::kPackageFieldNumber;
const int ApplicationListUpdateEvent_Application::kLaunchIntentFieldNumber;
#endif  // !_MSC_VER

ApplicationListUpdateEvent_Application::ApplicationListUpdateEvent_Application()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
}

void ApplicationListUpdateEvent_Application::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  launch_intent_ = const_cast< ::kydroid::protobuf::bridge::Intent*>(
      ::kydroid::protobuf::bridge::Intent::internal_default_instance());
#else
  launch_intent_ = const_cast< ::kydroid::protobuf::bridge::Intent*>(&::kydroid::protobuf::bridge::Intent::default_instance());
#endif
}

ApplicationListUpdateEvent_Application::ApplicationListUpdateEvent_Application(const ApplicationListUpdateEvent_Application& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
}

void ApplicationListUpdateEvent_Application::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_intent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ApplicationListUpdateEvent_Application::~ApplicationListUpdateEvent_Application() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
  SharedDtor();
}

void ApplicationListUpdateEvent_Application::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete package_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete launch_intent_;
  }
}

void ApplicationListUpdateEvent_Application::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ApplicationListUpdateEvent_Application& ApplicationListUpdateEvent_Application::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

ApplicationListUpdateEvent_Application* ApplicationListUpdateEvent_Application::default_instance_ = NULL;

ApplicationListUpdateEvent_Application* ApplicationListUpdateEvent_Application::New() const {
  return new ApplicationListUpdateEvent_Application;
}

void ApplicationListUpdateEvent_Application::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_package()) {
      if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        package_->clear();
      }
    }
    if (has_launch_intent()) {
      if (launch_intent_ != NULL) launch_intent_->::kydroid::protobuf::bridge::Intent::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ApplicationListUpdateEvent_Application::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_package;
        break;
      }

      // required string package = 2;
      case 2: {
        if (tag == 18) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_launch_intent;
        break;
      }

      // optional .kydroid.protobuf.bridge.Intent launch_intent = 3;
      case 3: {
        if (tag == 26) {
         parse_launch_intent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_launch_intent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
  return false;
#undef DO_
}

void ApplicationListUpdateEvent_Application::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string package = 2;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package(), output);
  }

  // optional .kydroid.protobuf.bridge.Intent launch_intent = 3;
  if (has_launch_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->launch_intent(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application)
}

int ApplicationListUpdateEvent_Application::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string package = 2;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional .kydroid.protobuf.bridge.Intent launch_intent = 3;
    if (has_launch_intent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->launch_intent());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplicationListUpdateEvent_Application::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ApplicationListUpdateEvent_Application*>(&from));
}

void ApplicationListUpdateEvent_Application::MergeFrom(const ApplicationListUpdateEvent_Application& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_package()) {
      set_package(from.package());
    }
    if (from.has_launch_intent()) {
      mutable_launch_intent()->::kydroid::protobuf::bridge::Intent::MergeFrom(from.launch_intent());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ApplicationListUpdateEvent_Application::CopyFrom(const ApplicationListUpdateEvent_Application& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationListUpdateEvent_Application::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ApplicationListUpdateEvent_Application::Swap(ApplicationListUpdateEvent_Application* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(package_, other->package_);
    std::swap(launch_intent_, other->launch_intent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ApplicationListUpdateEvent_Application::GetTypeName() const {
  return "kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ApplicationListUpdateEvent::kApplicationsFieldNumber;
const int ApplicationListUpdateEvent::kRemovedApplicationsFieldNumber;
#endif  // !_MSC_VER

ApplicationListUpdateEvent::ApplicationListUpdateEvent()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
}

void ApplicationListUpdateEvent::InitAsDefaultInstance() {
}

ApplicationListUpdateEvent::ApplicationListUpdateEvent(const ApplicationListUpdateEvent& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
}

void ApplicationListUpdateEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ApplicationListUpdateEvent::~ApplicationListUpdateEvent() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
  SharedDtor();
}

void ApplicationListUpdateEvent::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ApplicationListUpdateEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ApplicationListUpdateEvent& ApplicationListUpdateEvent::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

ApplicationListUpdateEvent* ApplicationListUpdateEvent::default_instance_ = NULL;

ApplicationListUpdateEvent* ApplicationListUpdateEvent::New() const {
  return new ApplicationListUpdateEvent;
}

void ApplicationListUpdateEvent::Clear() {
  applications_.Clear();
  removed_applications_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ApplicationListUpdateEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application applications = 1;
      case 1: {
        if (tag == 10) {
         parse_applications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applications()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_applications;
        if (input->ExpectTag(18)) goto parse_removed_applications;
        break;
      }

      // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application removed_applications = 2;
      case 2: {
        if (tag == 18) {
         parse_removed_applications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_removed_applications()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_removed_applications;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
  return false;
#undef DO_
}

void ApplicationListUpdateEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
  // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application applications = 1;
  for (int i = 0; i < this->applications_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->applications(i), output);
  }

  // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application removed_applications = 2;
  for (int i = 0; i < this->removed_applications_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->removed_applications(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.ApplicationListUpdateEvent)
}

int ApplicationListUpdateEvent::ByteSize() const {
  int total_size = 0;

  // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application applications = 1;
  total_size += 1 * this->applications_size();
  for (int i = 0; i < this->applications_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->applications(i));
  }

  // repeated .kydroid.protobuf.bridge.ApplicationListUpdateEvent.Application removed_applications = 2;
  total_size += 1 * this->removed_applications_size();
  for (int i = 0; i < this->removed_applications_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->removed_applications(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplicationListUpdateEvent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ApplicationListUpdateEvent*>(&from));
}

void ApplicationListUpdateEvent::MergeFrom(const ApplicationListUpdateEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  applications_.MergeFrom(from.applications_);
  removed_applications_.MergeFrom(from.removed_applications_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ApplicationListUpdateEvent::CopyFrom(const ApplicationListUpdateEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationListUpdateEvent::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->applications())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->removed_applications())) return false;
  return true;
}

void ApplicationListUpdateEvent::Swap(ApplicationListUpdateEvent* other) {
  if (other != this) {
    applications_.Swap(&other->applications_);
    removed_applications_.Swap(&other->removed_applications_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ApplicationListUpdateEvent::GetTypeName() const {
  return "kydroid.protobuf.bridge.ApplicationListUpdateEvent";
}


// ===================================================================

#ifndef _MSC_VER
const int EventSequence::kBootFinishedFieldNumber;
const int EventSequence::kWindowStateUpdateFieldNumber;
const int EventSequence::kApplicationListUpdateFieldNumber;
const int EventSequence::kErrorFieldNumber;
const int EventSequence::kStructuredErrorFieldNumber;
#endif  // !_MSC_VER

EventSequence::EventSequence()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kydroid.protobuf.bridge.EventSequence)
}

void EventSequence::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  boot_finished_ = const_cast< ::kydroid::protobuf::bridge::BootFinishedEvent*>(
      ::kydroid::protobuf::bridge::BootFinishedEvent::internal_default_instance());
#else
  boot_finished_ = const_cast< ::kydroid::protobuf::bridge::BootFinishedEvent*>(&::kydroid::protobuf::bridge::BootFinishedEvent::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  window_state_update_ = const_cast< ::kydroid::protobuf::bridge::WindowStateUpdateEvent*>(
      ::kydroid::protobuf::bridge::WindowStateUpdateEvent::internal_default_instance());
#else
  window_state_update_ = const_cast< ::kydroid::protobuf::bridge::WindowStateUpdateEvent*>(&::kydroid::protobuf::bridge::WindowStateUpdateEvent::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  application_list_update_ = const_cast< ::kydroid::protobuf::bridge::ApplicationListUpdateEvent*>(
      ::kydroid::protobuf::bridge::ApplicationListUpdateEvent::internal_default_instance());
#else
  application_list_update_ = const_cast< ::kydroid::protobuf::bridge::ApplicationListUpdateEvent*>(&::kydroid::protobuf::bridge::ApplicationListUpdateEvent::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  structured_error_ = const_cast< ::kydroid::protobuf::bridge::StructuredError*>(
      ::kydroid::protobuf::bridge::StructuredError::internal_default_instance());
#else
  structured_error_ = const_cast< ::kydroid::protobuf::bridge::StructuredError*>(&::kydroid::protobuf::bridge::StructuredError::default_instance());
#endif
}

EventSequence::EventSequence(const EventSequence& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kydroid.protobuf.bridge.EventSequence)
}

void EventSequence::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  boot_finished_ = NULL;
  window_state_update_ = NULL;
  application_list_update_ = NULL;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  structured_error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventSequence::~EventSequence() {
  // @@protoc_insertion_point(destructor:kydroid.protobuf.bridge.EventSequence)
  SharedDtor();
}

void EventSequence::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete boot_finished_;
    delete window_state_update_;
    delete application_list_update_;
    delete structured_error_;
  }
}

void EventSequence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EventSequence& EventSequence::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_kydroid_5fbridge_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_kydroid_5fbridge_2eproto();
#endif
  return *default_instance_;
}

EventSequence* EventSequence::default_instance_ = NULL;

EventSequence* EventSequence::New() const {
  return new EventSequence;
}

void EventSequence::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_boot_finished()) {
      if (boot_finished_ != NULL) boot_finished_->::kydroid::protobuf::bridge::BootFinishedEvent::Clear();
    }
    if (has_window_state_update()) {
      if (window_state_update_ != NULL) window_state_update_->::kydroid::protobuf::bridge::WindowStateUpdateEvent::Clear();
    }
    if (has_application_list_update()) {
      if (application_list_update_ != NULL) application_list_update_->::kydroid::protobuf::bridge::ApplicationListUpdateEvent::Clear();
    }
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
    if (has_structured_error()) {
      if (structured_error_ != NULL) structured_error_->::kydroid::protobuf::bridge::StructuredError::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool EventSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:kydroid.protobuf.bridge.EventSequence)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .kydroid.protobuf.bridge.BootFinishedEvent boot_finished = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_boot_finished()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_window_state_update;
        break;
      }

      // optional .kydroid.protobuf.bridge.WindowStateUpdateEvent window_state_update = 2;
      case 2: {
        if (tag == 18) {
         parse_window_state_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_window_state_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_application_list_update;
        break;
      }

      // optional .kydroid.protobuf.bridge.ApplicationListUpdateEvent application_list_update = 3;
      case 3: {
        if (tag == 26) {
         parse_application_list_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_list_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1018)) goto parse_error;
        break;
      }

      // optional string error = 127;
      case 127: {
        if (tag == 1018) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1026)) goto parse_structured_error;
        break;
      }

      // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
      case 128: {
        if (tag == 1026) {
         parse_structured_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_structured_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kydroid.protobuf.bridge.EventSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kydroid.protobuf.bridge.EventSequence)
  return false;
#undef DO_
}

void EventSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kydroid.protobuf.bridge.EventSequence)
  // optional .kydroid.protobuf.bridge.BootFinishedEvent boot_finished = 1;
  if (has_boot_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->boot_finished(), output);
  }

  // optional .kydroid.protobuf.bridge.WindowStateUpdateEvent window_state_update = 2;
  if (has_window_state_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->window_state_update(), output);
  }

  // optional .kydroid.protobuf.bridge.ApplicationListUpdateEvent application_list_update = 3;
  if (has_application_list_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->application_list_update(), output);
  }

  // optional string error = 127;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      127, this->error(), output);
  }

  // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
  if (has_structured_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      128, this->structured_error(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:kydroid.protobuf.bridge.EventSequence)
}

int EventSequence::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .kydroid.protobuf.bridge.BootFinishedEvent boot_finished = 1;
    if (has_boot_finished()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->boot_finished());
    }

    // optional .kydroid.protobuf.bridge.WindowStateUpdateEvent window_state_update = 2;
    if (has_window_state_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->window_state_update());
    }

    // optional .kydroid.protobuf.bridge.ApplicationListUpdateEvent application_list_update = 3;
    if (has_application_list_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_list_update());
    }

    // optional string error = 127;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional .kydroid.protobuf.bridge.StructuredError structured_error = 128;
    if (has_structured_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_error());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventSequence::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EventSequence*>(&from));
}

void EventSequence::MergeFrom(const EventSequence& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boot_finished()) {
      mutable_boot_finished()->::kydroid::protobuf::bridge::BootFinishedEvent::MergeFrom(from.boot_finished());
    }
    if (from.has_window_state_update()) {
      mutable_window_state_update()->::kydroid::protobuf::bridge::WindowStateUpdateEvent::MergeFrom(from.window_state_update());
    }
    if (from.has_application_list_update()) {
      mutable_application_list_update()->::kydroid::protobuf::bridge::ApplicationListUpdateEvent::MergeFrom(from.application_list_update());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_structured_error()) {
      mutable_structured_error()->::kydroid::protobuf::bridge::StructuredError::MergeFrom(from.structured_error());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void EventSequence::CopyFrom(const EventSequence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventSequence::IsInitialized() const {

  if (has_window_state_update()) {
    if (!this->window_state_update().IsInitialized()) return false;
  }
  if (has_application_list_update()) {
    if (!this->application_list_update().IsInitialized()) return false;
  }
  return true;
}

void EventSequence::Swap(EventSequence* other) {
  if (other != this) {
    std::swap(boot_finished_, other->boot_finished_);
    std::swap(window_state_update_, other->window_state_update_);
    std::swap(application_list_update_, other->application_list_update_);
    std::swap(error_, other->error_);
    std::swap(structured_error_, other->structured_error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EventSequence::GetTypeName() const {
  return "kydroid.protobuf.bridge.EventSequence";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bridge
}  // namespace protobuf
}  // namespace kydroid

// @@protoc_insertion_point(global_scope)
